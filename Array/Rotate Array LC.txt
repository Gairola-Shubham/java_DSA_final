class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k=k%n;

        reverse(nums,0,n-1);
        reverse(nums,0,k-1);
        reverse(nums,k,n-1);
    }
    private static void reverse(int[]nums, int left, int right) {
        while(left<right){
            int temp = nums[left];
            nums[left] = nums[right];
            nums[right] = temp;
            left++;
            right--;
        }
    }
    public void rotate2(int[] nums, int k) {
        int n = nums.length;
        int[] result = new int[n];
        k=k%n;
        for(int i=0; i<n; i++){
            result[(i+k)%n] = nums[i];
        }
        System.arraycopy(result,0,nums,0,n);
    }
    public void rotate1(int[] nums, int k) {
        int n = nums.length;
        k = k%n;
        for(int i=0; i<k; i++){
            int last = nums[n-1];
            for(int j=n-1; j>0; j--){
                nums[j] = nums[j-1];
            }
            nums[0] = last;
        }
    }
}